import { TGen } from './helpers';
export * from './generators';
export * from './helpers';
declare type TBuilder<T> = {
    [K in keyof T]: TGen<T[K] extends object ? TBuilder<T[K]> : T[K]>;
};
declare type TOverride<T> = {
    [K in keyof T]?: TGen<T[K] extends object ? TOverride<T[K]> : T[K]>;
};
export declare function build<T>(builder: TBuilder<T>): (override?: TOverride<T>) => T;
